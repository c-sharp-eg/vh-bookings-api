# Set variables once
variables:
  solutionType: DotNetCore # angularDotNetCore, dotNetCore, angular
  apiDirectory: 'BookingsAPI/Bookings.API'
  sonarCloudExtraProperties: |
    sonar.cs.opencover.reportsPaths=$(Common.TestResultsDirectory)\Coverage\coverage.opencover.xml
    sonar.coverage.exclusions=Bookings.API/Program.cs,Bookings.API/Startup.cs,Bookings.API/Extensions/**,Bookings.API/Swagger/**,Bookings.API/ConfigureServicesExtensions.cs,Testing.Common/**,Bookings.Common/**,**/Bookings.DAL/Mappings/**,Bookings.DAL/SeedData/**,Bookings.DAL/BookingsDbContext.cs,Bookings.DAL/**/DesignTimeHearingsContextFactory.cs,**/Bookings.DAL/Migrations/**,Bookings.Domain/Ddd/**,Bookings.DAL/Commands/Core/**,Bookings.DAL/Queries/Core/**,**/Testing.Common/**
    sonar.cpd.exclusions="**/Program.cs,**/Startup.cs,Bookings.DAL/Mappings/**,Migrations/**,SeedData/**,DesignTimeHearingsContextFactory.cs,Ddd/**,Testing.Common/**,Bookings.API/ConfigureServicesExtensions.cs,Bookings.API/Extensions/**,Bookings.API/Swagger/**,Bookings.Common/**"
  coverletCoverageExclusions: '[*]Bookings.Common.*,[*]Testing.Common.*,[Bookings.DAL]Bookings.DAL.BookingsDbContext,[*]Bookings.DAL.Mappings,[*]Bookings.DAL.Migrations,[*]Bookings.DAL.SeedData.*,[*]Bookings.DAL.Exceptions.*,[*]Bookings.DAL.Mappings.*,[*]Bookings.DAL.Migrations.*,[*]Bookings.DAL.Commands.Core.*,[*]Bookings.DAL.Queries.Core.*,[*]Bookings.Domain.Ddd.*,[Bookings.DAL]Bookings.DAL.DesignTimeHearingsContextFactory,[Bookings.API]Bookings.API.ConfigureServicesExtensions,[*]Bookings.API.Extensions.*,[*]Bookings.API.Swagger.*,[Bookings.API]Bookings.API.Program,[Bookings.API]Bookings.API.Startup'
  integrationTestsAppSettingsTransform: '
    "AzureAd/TenantId":"$(tenantid)",
    "AzureAd/VhBookingsApiResourceId":"$(vh-bookings-api-identifieruris)",
    "Testing/TestClientId":"$(vh-admin-web-appid)",
    "Testing/TestClientSecret":"$(vh-admin-web-key)"
    '
  dalWorkingDirectory: 'BookingsAPI/Bookings.DAL'
  keyVaultName: vhcoreinfrahtdev # Used to get secrets for integration tests
  secretsFilter: 'vh-admin-web-appid,vh-admin-web-key,tenantid,vh-bookings-api-identifieruris' # filters out secrets returned from key vault

  ## extra variables used only in testing multi-stage pipelien. Variables are from Release pipeline
  ##
  ##
  ProjectName: 'vh-bookings-api'
  VHAzureKeyVaultNameCore: 'vhcoreinfrapreview'
  ReadInfraKeyVaultSecrets: 'vh-core-infra-AppInsightsKey,VhBookingsDatabaseConnectionString,AzureServiceBusConnectionStringSend'
  VHAzureKeyVaultNameHTCore: 'vhcoreinfrahtpreview'
  ReadKeyVaultSecrets: 'TenantId,$(ProjectName)-identifieruris,vh-admin-web-appid,vh-admin-web-key'


# GitHub Repo that conatins build templates. Reference https://docs.microsoft.com/en-us/azure/devops/pipelines/process/templates?view=vsts#using-other-repositories
resources:
  repositories:
  - repository: azureDevOpsTemplates
    type: github
    name: hmcts/azure-devops-templates
    ref: refs/heads/multistage-yaml-pipelien-fix # ref name to use, defaults to 'refs/heads/master'
    endpoint: 'GitHubDevOps'

trigger:
- master
- multistage-yaml-pipelien
pr:
- master

stages:
- stage: Build
  displayName: Build stage
  jobs:
  - template: jobs/angularDotNetCore.yml@azureDevOpsTemplates # Template reference
    parameters:
        sonarCloudExtraProperties: $(sonarCloudExtraProperties)
        integrationTestsAppSettingsTransform: $(integrationTestsAppSettingsTransform)
        coverletCoverageExclusions: $(coverletCoverageExclusions)
        apiDirectory: $(apiDirectory)
        dalWorkingDirectory: $(dalWorkingDirectory)
        keyVaultName: $(keyVaultName)
        secretsFilter: $(secretsFilter)

- stage: Deploy
  displayName: Deploy stage
  jobs:
  - deployment: deployPreview
    displayName: Preview
    environment: 'Preview'
    strategy:
      runOnce:
        deploy:
          steps:
          - task: DotNetCoreInstaller@0
            displayName: 'Use .NET Core sdk 2.2.104'
            inputs:
              version: 2.2.104

          - powershell: |
              $LowerEnvironmentName = "preview".ToLower()
              Write-Output ("##vso[task.setvariable variable=Release.EnvironmentName;]$LowerEnvironmentName")
              
              Write-Host "Release.EnvironmentName variable updates"
            displayName: 'Set Environment Variables to lower case'

          - task: AzureKeyVault@1
            displayName: 'Azure Key Vault: VH Infra Core'
            inputs:
              azureSubscription: 'Reform-CFT-VH-Dev'
              KeyVaultName: '$(VHAzureKeyVaultNameCore)'
              SecretsFilter: '$(ReadInfraKeyVaultSecrets)'
          
          - task: AzureKeyVault@1
            displayName: 'Azure Key Vault: VH Infra HT'
            inputs:
              azureSubscription: 'Reform-CFT-VH-Dev'
              KeyVaultName: '$(VHAzureKeyVaultNameHTCore)'
              SecretsFilter: '$(ReadKeyVaultSecrets)'

          - task: sergeyzwezdin.magic-chunks.magic.chunks.MagicChunks@2
            displayName: 'Transform DAL appsettings'
            inputs:
              sourcePath: '**/DalProject/*/appsettings.json'
              sourcePathRecurse: true
              transformations: |
                {
                    "ConnectionStrings/VhBookings":"$(VhBookingsDatabaseConnectionString)"
                }

          - task: AzureRmWebAppDeployment@3
            displayName: 'Azure App Service Deploy'
            inputs:
              azureSubscription: 'Reform-CFT-VH-Dev'
              WebAppName: '$(ProjectName)-preview'
              Package: '$(System.DefaultWorkingDirectory)/**/**/*.zip'
              AppSettings: '$(AppSettings)'
              TakeAppOfflineFlag: true
              UseWebDeploy: true
              RemoveAdditionalFilesFlag: true
              RenameFilesFlag: true
              JSONFiles: '**/appsettings.json'

          - task: MagicChunks@2
            displayName: 'Transform AC appsettings'
            inputs:
              sourcePath: '**/AcceptanceTests/*/appsettings.json'
              transformations: |
                {
                    "AcceptanceTestSettings/BookingsApiBaseUrl":"$(AppUri)",
                    "AzureAd/TenantId":"$(tenantid)",
                    "AzureAd/VhBookingsApiResourceId":"$(vh-bookings-api-identifieruris)",
                    "Testing/TestClientId":"$(vh-admin-web-appid)",
                    "Testing/TestClientSecret":"$(vh-admin-web-key)"
                }

          - task: DotNetCoreCLI@2
            displayName: 'Run Acceptance Tests'
            inputs:
              command: custom
              custom: vstest
              arguments: '$(System.DefaultWorkingDirectory)/_hmcts.vh-bookings-api/AcceptanceTests/netcoreapp2.2/Bookings.AcceptanceTests.dll /logger:trx '

          - task: PublishTestResults@2
            displayName: 'Publish test results'
            inputs:
              testResultsFormat: VSTest
              testResultsFiles: 'TestResults/*.trx'
            condition: succeededOrFailed()